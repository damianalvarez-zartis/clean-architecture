// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoList.DataAccess.Database.DbContexts;

#nullable disable

namespace TodoList.DataAccess.Database.Migrations
{
    [DbContext(typeof(TodoListDbContext))]
    [Migration("20230203130220_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("ToDoList.Core.Models.Domain.TodoListModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("TodoLists");
                });

            modelBuilder.Entity("ToDoList.Core.Models.Domain.TodoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<int>("IsDone")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_done");

                    b.Property<int>("list_id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("list_id");

                    b.HasKey("Id");

                    b.HasIndex("list_id");

                    b.ToTable("TodoTask");
                });

            modelBuilder.Entity("ToDoList.Core.Models.Domain.TodoTask", b =>
                {
                    b.HasOne("ToDoList.Core.Models.Domain.TodoListModel", "Parent")
                        .WithMany("TodoTasks")
                        .HasForeignKey("list_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ToDoList.Core.Models.Domain.TodoListModel", b =>
                {
                    b.Navigation("TodoTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
